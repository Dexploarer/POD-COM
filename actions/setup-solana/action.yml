name: 'Setup Solana Environment'
description: 'GitHub Action to setup Solana CLI, Anchor CLI, Rust, and dependencies for PoD Protocol platform'
inputs:
  solana-version:
    description: 'Version of Solana CLI to install'
    required: false
    default: '2.2.17'
  anchor-version:
    description: 'Version of Anchor CLI to install'
    required: false
    default: '0.31.1'
runs:
  using: 'composite'
  steps:
    - name: Cache Rust installation
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          ~/.rustup
        key: ${{ runner.os }}-rust-${{ hashFiles('**/Cargo.lock') }}
        
    - name: Install Rust
      shell: bash
      run: |
        if ! command -v rustc &> /dev/null; then
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
          source $HOME/.cargo/env
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH
        fi
        
    - name: Install Solana CLI
      shell: bash
      run: |
        if ! command -v solana &> /dev/null; then
          sh -c "$(curl -sSfL https://release.anza.xyz/stable/install)"
          echo "$HOME/.local/share/solana/install/active_release/bin" >> $GITHUB_PATH
        fi
        export PATH="$HOME/.local/share/solana/install/active_release/bin:$PATH"
        solana --version
        
    - name: Install Anchor CLI via AVM
      shell: bash
      run: |
        export PATH="$HOME/.cargo/bin:$PATH"
        if ! command -v avm &> /dev/null; then
          cargo install --git https://github.com/coral-xyz/anchor avm --force
        fi
        if ! command -v anchor &> /dev/null || ! anchor --version | grep -q "${{ inputs.anchor-version }}"; then
          avm install ${{ inputs.anchor-version }}
          avm use ${{ inputs.anchor-version }}
        fi
        anchor --version
        
    - name: Install system dependencies
      shell: bash
      run: |
        if [[ "$RUNNER_OS" == "Linux" ]]; then
          sudo apt-get update
          sudo apt-get install -y build-essential pkg-config libudev-dev llvm libclang-dev protobuf-compiler libssl-dev
        elif [[ "$RUNNER_OS" == "macOS" ]]; then
          brew install protobuf
        fi
        
    - name: Verify installations
      shell: bash
      run: |
        echo "ðŸ¦€ Rust version:"
        rustc --version
        echo "âš¡ Solana version:"
        solana --version
        echo "âš“ Anchor version:"
        anchor --version
        echo "âœ… All tools installed successfully!"
