name: Code Quality

on:
  pull_request:
    branches: [main, develop]
  workflow_dispatch:

jobs:
  coverage-and-analysis:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install dependencies
        run: bun install

      - name: Install workspace dependencies
        run: |
          cd sdk && bun install
          cd ../cli && bun install

      - name: Run tests with coverage
        run: |
          bun test --coverage
        continue-on-error: true

      - name: Run Rust tests
        run: cargo test
        working-directory: programs/pod-com
        continue-on-error: true

      # Optional: Upload coverage to Codecov (requires CODECOV_TOKEN secret)
      - name: Upload coverage to Codecov
        if: env.CODECOV_TOKEN != ''
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: false
        continue-on-error: true
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

      # Optional: SonarCloud analysis (requires SONAR_TOKEN secret)  
      - name: SonarCloud Scan
        if: env.SONAR_TOKEN != ''
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        continue-on-error: true