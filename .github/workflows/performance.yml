name: Performance Testing

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  performance:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install dependencies
        run: |
          npm ci --legacy-peer-deps
          cd sdk && npm ci --legacy-peer-deps
          cd ../cli && npm ci --legacy-peer-deps

      - name: Build optimized release
        run: |
          npm run build:all
          cargo build --release

      - name: Run performance tests
        run: |
          echo "Running performance tests..."
          npm test
          # Only run cargo bench if bench target exists
          if cargo metadata --format-version 1 | grep -q '"bench"'; then
            cargo bench
          else
            echo "No benchmark targets found, running cargo test instead"
            cargo test --release
          fi

      - name: Upload performance results
        uses: actions/upload-artifact@v4
        with:
          name: performance-results
          path: |
            performance-results.json
            target/criterion/
          if-no-files-found: ignore
            
      - name: Comment PR with performance results
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            if (fs.existsSync('performance-results.json')) {
              const results = JSON.parse(fs.readFileSync('performance-results.json', 'utf8'));
              const comment = `## üöÄ Performance Test Results
              
              | Metric | Value | Status |
              |--------|-------|--------|
              | Average Response Time | ${results.avgResponseTime}ms | ${results.avgResponseTime < 100 ? '‚úÖ' : '‚ö†Ô∏è'} |
              | Throughput | ${results.throughput} req/s | ${results.throughput > 1000 ? '‚úÖ' : '‚ö†Ô∏è'} |
              | Memory Usage | ${results.memoryUsage}MB | ${results.memoryUsage < 500 ? '‚úÖ' : '‚ö†Ô∏è'} |
              `;
              
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: comment
              });
            }