name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  CARGO_TERM_COLOR: always
  SOLANA_VERSION: "1.16.27"
  ANCHOR_VERSION: "0.31.1"

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install Rust
      run: |
        if ! command -v rustup &>/dev/null; then
          curl --proto '=https' --tlsv1.2 --retry 10 --retry-connrefused \
               --location --silent --show-error --fail https://sh.rustup.rs \
               | sh -s -- --default-toolchain none -y || exit 1
        fi

    - name: Setup Rust target
      run: rustup target add aarch64-apple-darwin

    - name: Install Solana CLI
      run: |
        curl -sSf https://release.solana.com/stable/install | bash || exit 1
        echo "$HOME/.local/share/solana/install/active_release/bin" >> $GITHUB_PATH

    - name: Install Anchor CLI
      run: npm install -g @coral-xyz/anchor-cli@${{ env.ANCHOR_VERSION }} --legacy-peer-deps

    - name: Generate keypair
      run: solana-keygen new --no-bip39-passphrase

    - name: Install dependencies
      run: |
        npm install --legacy-peer-deps
        cd sdk && npm install --legacy-peer-deps
        cd ../cli && npm install --legacy-peer-deps

    - name: Lint Rust code
      run: |
        cargo fmt -- --check
        cargo clippy -- -D warnings

    - name: Build Anchor program
      run: anchor build

    - name: Build SDK
      run: |
        cd sdk
        npm run build

    - name: Build CLI
      run: |
        cd cli
        npm run build

    - name: Run tests
      run: anchor test --skip-deploy
      env:
        ANCHOR_PROVIDER_URL: "http://localhost:8899"
