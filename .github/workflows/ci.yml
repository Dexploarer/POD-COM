name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

permissions:
  contents: read

env:
  SOLANA_VERSION: "2.2.17"
  ANCHOR_VERSION: "0.31.1"
  BUN_VERSION: "latest"

jobs:
  lint:
    runs-on: ubuntu-latest
    name: "üé® Code Style & Linting"
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: ${{ env.BUN_VERSION }}

      - name: Install dependencies
        run: |
          bun install
          cd sdk && bun install
          cd ../cli && bun install

      - name: Run prettier check
        run: bun run lint

      - name: Run TypeScript linting (SDK)
        working-directory: sdk
        run: bun run lint

      - name: Run TypeScript linting (CLI)
        working-directory: cli
        run: bun run lint

  security:
    runs-on: ubuntu-latest
    name: "üîí Security Audit"
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: ${{ env.BUN_VERSION }}

      - name: Install dependencies
        run: |
          bun install
          cd sdk && bun install
          cd ../cli && bun install

      - name: Run security audit (Root)
        run: bun audit
        continue-on-error: false

      - name: Run security audit (SDK)
        working-directory: sdk
        run: bun audit
        continue-on-error: false

      - name: Run security audit (CLI)
        working-directory: cli
        run: bun audit
        continue-on-error: false

  build:
    runs-on: ubuntu-latest
    name: "üèóÔ∏è Build & Compile"
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: ${{ env.BUN_VERSION }}

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable

      - name: Setup Solana
        uses: ./actions/setup-solana
        with:
          solana-version: ${{ env.SOLANA_VERSION }}

      - name: Cache Rust dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
            programs/pod-com/target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache Bun dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.bun/install/cache
            node_modules
            sdk/node_modules
            cli/node_modules
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lock') }}

      - name: Install dependencies
        run: |
          bun install
          cd sdk && bun install
          cd ../cli && bun install

      - name: Verify build setup
        run: bun run build:verify

      - name: Build Anchor programs
        run: bun run build:safe

      - name: Build IDL
        run: bun run build:idl

      - name: Build SDK
        working-directory: sdk
        run: bun run build

      - name: Build CLI
        working-directory: cli
        run: bun run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            target/deploy/
            target/idl/
            sdk/dist/
            cli/dist/

  test:
    runs-on: ubuntu-latest
    name: "üß™ Test Suite"
    needs: [build]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: ${{ env.BUN_VERSION }}

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable

      - name: Setup Solana
        uses: ./actions/setup-solana
        with:
          solana-version: ${{ env.SOLANA_VERSION }}

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts

      - name: Install dependencies
        run: |
          bun install
          cd sdk && bun install
          cd ../cli && bun install

      - name: Setup Solana keypair
        run: |
          mkdir -p ~/.config/solana
          solana-keygen new --no-bip39-passphrase -o ~/.config/solana/id.json
          solana config set --url localhost

      - name: Start Solana test validator
        run: |
          solana-test-validator --reset --quiet &
          sleep 10

      - name: Run unit tests
        run: bun run test

      - name: Run SDK tests
        working-directory: sdk
        run: bun run test

      - name: Run CLI tests
        working-directory: cli
        run: bun run test

      - name: Stop Solana test validator
        run: pkill -f solana-test-validator || true