name: Build and Test

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

permissions:
  contents: read
  security-events: write

jobs:
  build-and-test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [18, 20]
        include:
          - os: ubuntu-latest
            node-version: 18
            run-coverage: true

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy

      - name: Cache Rust dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Setup Solana
        uses: ./actions/setup-solana
        with:
          solana-version: '1.16.27'

      - name: Install dependencies
        run: |
          npm ci --legacy-peer-deps
          cd sdk && npm ci --legacy-peer-deps
          cd ../cli && npm ci --legacy-peer-deps

      - name: Lint TypeScript and JavaScript
        run: |
          npm run lint
          cd sdk && npm run lint
          cd ../cli && npm run lint

      - name: Lint Rust
        run: |
          cargo fmt --check
          cargo clippy -- -D warnings

      - name: Build Rust program
        run: cargo build --release

      - name: Build TypeScript packages
        run: npm run build:all

      - name: Test Rust
        run: cargo test

      - name: Test TypeScript
        run: |
          npm test
          cd sdk && npm test
          cd ../cli && npm test

      - name: Security audit
        run: |
          npm audit --audit-level high || echo "npm audit completed with warnings"
          cargo audit || echo "cargo audit completed with warnings"
        continue-on-error: true

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ matrix.os }}-node${{ matrix.node-version }}
          path: |
            target/debug/
            test-results.xml
            coverage/
          if-no-files-found: ignore
