name: Rust

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

env:
  CARGO_TERM_COLOR: always
  SOLANA_VERSION: "2.2.17"
  ANCHOR_VERSION: "0.31.1"
  CARGO_BUILD_TARGET: x86_64-unknown-linux-gnu

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          components: rustfmt, clippy

      - name: Setup Solana
        run: |
          sh -c "$(curl -sSfL https://release.anza.xyz/stable/install)"
          echo "/home/runner/.local/share/solana/install/active_release/bin" >> $GITHUB_PATH

      - name: Setup Anchor
        run: |
          cargo install --git https://github.com/coral-xyz/anchor avm --force
          avm install ${{ env.ANCHOR_VERSION }}
          avm use ${{ env.ANCHOR_VERSION }}

      - name: Setup Solana keypair
        run: |
          mkdir -p ~/.config/solana
          solana-keygen new --no-bip39-passphrase -o ~/.config/solana/id.json
          solana config set --url localhost

      - name: Cache Rust dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
            programs/pod-com/target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Check Rust formatting
        run: cargo fmt --check
        working-directory: programs/pod-com

      - name: Run Clippy
        run: cargo clippy --all-targets --all-features -- -D warnings
        working-directory: programs/pod-com

      - name: Run unit tests
        run: cargo test
        working-directory: programs/pod-com

      - name: Build Anchor program
        run: anchor build
